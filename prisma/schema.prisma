// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
  
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  form          Form?
}

model Form {
  id         String   @id @default(cuid())
  imageData  String?  
  prefix     Prefix?  
  firstname  String?
  surname    String?
  nickname   String?
  date       DateTime?
  email      String?
  phone      String?
  province   String?
  grade      Grade?   
  school     String?
  etc        String?
  ans        String[] 
  checkbox   Boolean?
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])
}

enum Prefix {
  นาย
  นาง
  นางสาว
}

enum Grade {
  ม_4
  ม_5
  ม_6
  ปวช
}
